--- CMakeLists.txt
+++ CMakeLists.txt
@@ -32,6 +32,17 @@
 
-find_package(BinaryNinjaCore REQUIRED)
-target_link_libraries(binaryninjaapi PUBLIC ${BinaryNinjaCore_LIBRARIES})
-target_link_directories(binaryninjaapi PUBLIC ${BinaryNinjaCore_LIBRARY_DIRS})
-target_compile_definitions(binaryninjaapi PUBLIC ${BinaryNinjaCore_DEFINITIONS})
+find_package(BinaryNinjaCore)
+if(BinaryNinjaCore_FOUND)
+    target_link_libraries(binaryninjaapi PUBLIC ${BinaryNinjaCore_LIBRARIES})
+    target_link_directories(binaryninjaapi PUBLIC ${BinaryNinjaCore_LIBRARY_DIRS})
+    target_compile_definitions(binaryninjaapi PUBLIC ${BinaryNinjaCore_DEFINITIONS})
+else()
+    if(APPLE)
+        target_link_options(binaryninjaapi PUBLIC -undefined dynamic_lookup)
+    elseif(MSVC)
+        target_link_options(binaryninjaapi PUBLIC "LINKER:/FORCE:UNRESOLVED")
+    else()
+        target_link_options(binaryninjaapi PUBLIC "LINKER:--allow-shlib-undefined")
+    endif()
+endif()
+set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 
@@ -83,13 +94,15 @@
         # BinaryNinjaCore has the user plugins dir define that we want
-        find_package(BinaryNinjaCore REQUIRED)
-        if(WIN32)
-            install(TARGETS ${target} RUNTIME
-                DESTINATION ${BinaryNinjaCore_USER_PLUGINS_DIR})
-
-            install(FILES $<TARGET_PDB_FILE:${target}>
-                DESTINATION ${BinaryNinjaCore_USER_PLUGINS_DIR} OPTIONAL)
-        else()
-            install(TARGETS ${target} LIBRARY
-                DESTINATION ${BinaryNinjaCore_USER_PLUGINS_DIR})
-        endif()
+        find_package(BinaryNinjaCore)
+		if(BinaryNinjaCore_FOUND)
+			if(WIN32)
+				install(TARGETS ${target} RUNTIME
+					DESTINATION ${BinaryNinjaCore_USER_PLUGINS_DIR})
+
+				install(FILES $<TARGET_PDB_FILE:${target}>
+					DESTINATION ${BinaryNinjaCore_USER_PLUGINS_DIR} OPTIONAL)
+			else()
+				install(TARGETS ${target} LIBRARY
+					DESTINATION ${BinaryNinjaCore_USER_PLUGINS_DIR})
+			endif()
+		endif()
     endif()
